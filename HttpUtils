package com.huawei.it.cic.email.utils;

import java.io.IOException;
import java.nio.charset.Charset;
import java.util.Map;
import java.util.Map.Entry;

import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.fluent.Request;
import org.apache.http.client.fluent.Response;
import org.apache.http.entity.StringEntity;



public class HttpUtils {
	
	public static String get(String url, Map<String, Object> param) throws ClientProtocolException, IOException {
		return get(url, param, null);
	}
	
	public static String get(String url, Map<String, Object> param, Map<String, String> header) throws ClientProtocolException, IOException {
		Request get = buildGet(url, param);
		if(header != null){
			for (Entry<String, String> entry : header.entrySet()) {
				get.addHeader(entry.getKey(), entry.getValue());
			}
		}
		Response response = get.addHeader("contentType", "UTF-8")
				.addHeader("Accept-Charset", "UTF-8").execute();
		return response.returnContent().asString(Charset.forName("UTF-8"));
	}
	
	public static String postJson(String url, String json) throws ClientProtocolException, IOException{
		return postJson(url, json, null);
	}
	
	public static String postJson(String url, String json, Map<String, String> header) 
			throws ClientProtocolException, IOException{
		StringEntity entity = new StringEntity(json, "UTF-8");
		entity.setContentType("application/json");
		entity.setContentEncoding("UTF-8");
		Request request = Request.Post(url).addHeader("Accept-Charset", "UTF-8")
				.addHeader("contentType", "UTF-8").body(entity);
		if(header != null) {
			for (Entry<String, String> entry : header.entrySet()) {
				request.addHeader(entry.getKey(), entry.getValue());
			}
		}
		Response response = request.execute();
		return response.returnContent().asString(Charset.forName("UTF-8"));
	}

	
	private static Request buildGet(String URL, Map<String, Object> param) {
		String reqParam = "";
		if(param == null || param.isEmpty()) return Request.Get(URL);
		
		if( !URL.endsWith("?")) {
			reqParam += "?";
		}else if(URL.endsWith("/")){
			reqParam = URL.substring(0, URL.lastIndexOf("/")) + "?";
		}
		
		for(Entry<String, Object> entry : param.entrySet()){
			reqParam += entry.getKey() + "=" + entry.getValue() + "&";
		}
		reqParam = reqParam.replace("{", "%7b");
		reqParam = reqParam.replace("\"", "%22");
		reqParam = reqParam.replace("}", "%7d");
		URL += reqParam;
		return Request.Get(URL);
	}
	
}
